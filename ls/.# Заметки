# def inducaions(request):

#     page_ls_dan = '0'
#     messages = ''
#     messadges = ''
#     datavhod = ''
#     form__ = MakeStatement()
#     form = LkInduc()
#     ls = ''
#     # ------------ Таблицы---------------------
#     if request.method == 'POST' and 'lslogin' in request.POST:
#         form = LkInduc(data=request.POST)
#         # messadges = request.POST['id_ls']
#         id_lsPOST2 = request.POST['id_ls']
#         if form.is_valid():
#             id_lsPOST = request.POST['id_ls']
#             name_domPOST = request.POST['name_dom']
#             name_kvPOST = request.POST['name_kv']
#             page_ls_dan = InduImport.objects.filter(
#                 id_ls=id_lsPOST, name_dom=name_domPOST, name_kv=name_kvPOST)
#             if page_ls_dan:
#                 page_ls_dan = InduImport.objects.all().filter(id_ls=id_lsPOST)
#                 print(ls)
#             else:
#                 messages = 'Такой абонент не найден, попробуйте еще раз.'
#                 page_ls_dan = '0'
#                 form = LkInduc()
#         ls = id_lsPOST2
#     elif request.method == 'POST' and 'inducenter' in request.POST:
#         print('hello')
#         form__ = MakeStatement(data=request.POST)
        
#         ls__ = ls
#         print(func__())
#         # # ------------ Таблицы---------------------
#         # mkdLS = mkdLsList.objects.filter(id_ls=ls__)
#         # selaLS = selaLsList.objects.filter(id_ls=ls__)
#         # chLS = chLsList.objects.filter(id_ls=ls__)
#         # mkdLS__ = InduExport.objects.filter(id_ls=ls__)
#         # selaLS__ = InduExportSela.objects.filter(id_ls=ls__)
#         # chLS__ = InduExport.objects.filter(id_ls=ls__)
#         # DRAW = ''
#         # if mkdLS:
#         #     SEND_ = InduExport
#         #     messadges = 'Передача показаний в МКД'
#         #     DRAW = mkdLS__
#         # elif selaLS:
#         #     SEND_ = InduExportSela
#         #     messadges = 'Передача показаний в Село'
#         #     DRAW = selaLS__
#         # elif chLS:
#         #     SEND_ = InduExportCH
#         #     messadges = 'Передача показаний в Частный сектор'
#         #     DRAW = chLS__
#         # else:
#         #     messadges = 'Показания не найдены в текущем месяце.'

#         # # Показываем Сообщение из условия нахождения лицевого
#         # datavhod = InduImport.objects.filter(id_ls=ls__)
#         # if datavhod:
#         #     datavhod = InduImport.objects.all().filter(id_ls=ls__)
#         # else:
#         #     datavhod = ''
#         #     messages = "Для этого лицевого, нет данных для заполнения."
#         # if form__.is_valid():
#         #     __hv1_data = form__.cleaned_data['hv1_data']
#         #     __gv1_data = form__.cleaned_data['gv1_data']
#         #     __hv2_data = form__.cleaned_data['hv2_data']
#         #     __gv2_data = form__.cleaned_data['gv2_data']
#         #     __hv3_data = form__.cleaned_data['hv3_data']
#         #     __gv3_data = form__.cleaned_data['gv3_data']
#         #     __hv_data = form__.cleaned_data['hv_data']
#         #     __gv4_data = form__.cleaned_data['gv4_data']
#         #     print(datavhod)
#         #     for obj in datavhod:
#         #         id_ls = obj.id_ls
#         #         name_dom = obj.name_dom
#         #         name_kv = obj.name_kv
#         #         feed = InduExport(
#         #             id_ls=id_ls,
#         #             name_dom=name_dom,
#         #             name_kv=name_kv,
#         #             codsch_hv1=obj.codsch_hv1,
#         #             hv1_data=__hv1_data,
#         #             codsh_gv1=obj.codsh_gv1,
#         #             gv1_data=__gv1_data,
#         #             codsch_hv2=obj.codsch_hv2,
#         #             hv2_data=__hv2_data,
#         #             codsch_gv2=obj.codsch_gv2,
#         #             gv2_data=__gv2_data,
#         #             codsch_hv3=obj.codsch_hv3,
#         #             hv3_data=__hv3_data,
#         #             codsch_gv3=obj.codsch_gv3,
#         #             gv3_data=__gv3_data,
#         #             codsch_hv4=obj.codsch_hv4,
#         #             hv_data=__hv_data,
#         #             codsh_gv4=obj.codsh_gv4,
#         #             gv4_data=__gv4_data
#         #         )
#         #         feed.save()
                
#         #         # return HttpResponseRedirect(reverse('users:profile'))
#         # else:
#         #     form__ = MakeStatement()
#         #     print("Робот")
#     else:
#         form__ = MakeStatement()
#         page_ls_dan = '0'
#         form = LkInduc()

#     context = {'form': form, 'form__': form__,
#                'page_ls_dan': page_ls_dan, 'messages': messages, 'messadges': messadges}
#     return render(request, 'ls/indx.html', context)